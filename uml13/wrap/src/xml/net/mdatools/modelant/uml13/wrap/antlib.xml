<?xml version="1.0"?>
<!--
 * Copyright (c) 2001,2012 Rusi Popov, MDA Tools.net
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Rusi Popov (popovr@mdatools.net) - initial implementation
 -->

<!--
  Tasks, types and macros of ModelAnt UML 1.3 Wrapper.<br/>
  The UML 1.3 core wrappers provide the common complex logic as a middle tier between the model itself and the user code. <br/>
  Usage:<br/><br/>

  &lt;typedef resource="net/mdatools/modelant/uml13/wrap/antlib.xml"/&gt;<br/><br/>


  Imports:<br/><br/>

  &lt;typedef resource="net/mdatools/modelant/core/antlib.xml"/&gt;<br/>
  &lt;typedef resource="uml13/meta.xml"/&gt;
  -->
<antlib xmlns:current="ant:current">

   <!--
     Common task, types, macros loaded in the same class loader(!). Otherwise the classes hierarchy and equivalence are broken
     -->
  <typedef resource="uml13/meta.xml"/>

  <taskdef name="uml13.get" classname="net.mdatools.modelant.uml13.wrap.task.GetTask"/>

  <!--
    This task caches some of the model associations in order to provide fast navigation, not supported by the metamodel.
    Use it when starting intensive read processng of the model, not needed when creatng a new model.
    -->
  <taskdef name="uml13.begin.intensive.read" classname="net.mdatools.modelant.uml13.wrap.task.BeginIntensiveReadTask"/>

  <!--
    Regsiters a factory of UML 1.3 model wrapper objects. They add more features to the JMI standard API for model access.<br/>
    <b>Register this factory before using model wrapper objects.</b>
    -->
  <macrodef name="uml13.wrap.register.factory">
    <sequential>
      <wrap.factory.register factoryClass="org.omg.uml13.wrap.Uml13WrapFactory"/>
    </sequential>
  </macrodef>

  <!--
    Unregsiters a factory of UML 1.3 model wrapper objects and releases all wrappers it allocates.
    -->
  <macrodef name="uml13.wrap.unregister.factory">
    <sequential>
      <wrap.factory.unregister factoryClass="org.omg.uml13.wrap.Uml13WrapFactory"/>
    </sequential>
  </macrodef>

  <!--
    A condition to check if a model class is a subclass of another model class
    -->
  <typedef name="uml13.issubclass"  classname="net.mdatools.modelant.uml13.wrap.condition.IsSubclassOf"/>
  <typedef name="orderByQualifiedName" classname="net.mdatools.modelant.uml13.wrap.type.ComparatorByQualifiedName"/>

</antlib>