import net.mdatools.modelant.repository.api.ModelRepositoryFactory;
import net.mdatools.modelant.repository.api.ModelRepository;
import net.mdatools.modelant.repository.api.ModelFactory;
import javax.jmi.reflect.RefPackage;

import net.mdatools.modelant.core.name.PackageNameImpl;
import net.mdatools.modelant.uml13.reverse.Uml13ModelFactory;

System.err.println(">>>>>>>>>>> verify.bsh !!!!!!!!!!!!");

 ModelRepository repository;
 ModelFactory modelFactory;
 RefPackage modelExtent;  
 File modelFile;
 Uml13ModelFactory modelElementsFactory;
 
 repository = ModelRepositoryFactory.construct(new File("target"));
 try {
   modelFactory = repository.loadMetamodel("UML13");
   modelExtent = modelFactory.instantiate("JVADOC");  
 
   modelFile = new File(projectBaseDir+"/target/maven-test/java/target/model.xmi");
   modelFactory.readModel(modelExtent, modelFile);

   modelElementsFactory = new Uml13ModelFactory(modelExtent);
   
   System.out.println("Loaded!");
   
   // test the model
   netPackage = new PackageNameImpl("net");
   mdatoolsPackage = new PackageNameImpl(netPackage, "mdatools");
   modelantPackage = new PackageNameImpl(mdatoolsPackage, "modelant");
   
   // prove these packages are present
   modelElementsFactory.locateModelElement(netPackage);
   modelElementsFactory.locateModelElement(mdatoolsPackage);   
   modelElementsFactory.locateModelElement(modelantPackage);
   
   
 } finally {
   repository.shutdown();
 }

 System.out.println("<<<<<<<<<<< verify.bsh !!!!!!!!!!!!");

 // success
 return true;